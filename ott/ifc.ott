
metavar termvar, x ::=
  {{ tex \mathit{\color{red} [[termvar]]} }}
metavar labelvar, l ::=
  {{ tex \mathit{\color{blue}[[labelvar]]} }}
metavar taskidvar, tid ::=
  {{ tex \mathit{\color{blue}[[taskidvar]]} }}
metavar addressvar, a ::=
  {{ tex \mathit{\color{red}[[addressvar]]} }}
metavar storevar, s ::=
  {{ tex \mathit{\color{red}\sigma} }}

indexvar index, n, m ::=

grammar
e :: 'e_' ::= {{ com target language }} {{ tex \mathbf{\color{red} [[e]]} }}
  | x	      	     	     :: :: TVar		{{ com variable }}
  | e1 e2 		     :: :: TApp 	{{ com function application }}
  | ref e 		     :: :: TRef 	{{ com reference }}
  | ! e			     :: :: TDeref 	{{ com dereference }}
  | e1 := e2 		     :: :: TAssign 	{{ com assignment }}
  | fix e 		     :: :: TFix 	{{ com fixpoint operator }}
  | if e1 then e2 else e3    :: :: TCond 	{{ com conditional expression }}
  | TI f		     :: :: TIfcCall	{{ com call into the ifc language }}
  | v  	       	       	     :: :: TValue 	{{ com value }}
  | E e			     :: :: TEvalContext {{ com evaluation context }} {{ tex [[E]] [ [[e]] ] }}
  | ( e )		     :: S:: TParen

v :: 'v_' ::= {{ com target language value }} {{ tex \mathbf{\color{red} [[v]]} }}
  | true      	     	     :: :: TTrue	{{ com true literal }}
  | false		     :: :: TFalse	{{ com false literal }}
  | \ x . e		     :: :: TLambda	{{ com lambda expression }}
      	  		     	   		{{ tex \lambda [[x]].\, [[e]] }}
  | a 	  		     :: :: TAddress	{{ com address }}

E :: 'E_' ::= {{ com evaluation context }} {{ tex \mathbf{\color{red} [[E]]} }}
  | __			     :: :: THole	{{ com hole }}

f :: 'f_' ::= {{ com ifc language }} {{ tex {\color{blue} [[f]]} }}
  | label f1 f2	    	     :: :: ILabel       {{ com label }}
  | unlabel f		     :: :: IUnlabel	{{ com unlabel }}
  | send f1 f2	     	     :: :: ISend	{{ com send message }}
  | receive f1		     :: :: IReceive 	{{ com receive message }}
  | IT e    		     :: :: ITargetCall	{{ com call into target language }}
  | fv 			     :: :: IValue	{{ com ifc value }}
  | ( f )                    :: S:: IParens

fv :: 'fv_' ::= {{ com ifc language value }} {{ tex {\color{blue} [[fv]]} }}
   | tid		     :: :: IThreadId	{{ com thread identifier }}
   | l			     :: :: ILabel	{{ com label }}
   | Labeled l fv	     :: :: ILabeled	{{ com a labeled value }}
   | IT v      		     :: :: ITValue	{{ com value of the target langauge }}
   | ( fv )		     :: S:: IVParens

ic :: 'ic_' ::=
   | conf l s e		     :: :: IConfig	{{ com configuration }}
                    	     	   		{{ tex \langle [[s]], [[e]] \rangle^{[[l]]} }}

tc :: 'tc_' ::=
   | tconf s e               :: :: TConfig      {{ com configuration in the target language }}
                    	     	   		{{ tex \langle [[s]], [[e]] \rangle }}

terminals :: '' ::=
  | -->              ::  :: TReduce {{ tex \rightarrow }}
  | ~~>              ::  :: ISingleReduction {{ tex \leadsto }}
  | ==>              ::  :: Unused {{ tex \Rightarrow }}
  | ->               ::  :: IReduction {{ tex \hookrightarrow }}
  | op               ::  :: LabelOp   {{ tex \oplus }}
  | __               ::  :: Hole      {{ tex [\cdot] }}

defns
Jop :: '' ::=

  % the following transition is not defined, and is meant to capture the semantics of the target language
defn
  tc1 --> tc2 :: ::treduce :: '' {{ com [[tc1]] reduces to [[tc2]] (semantics of target language) }} by

defn
  ic1 ~~> ic2 :: :: IReduce :: '' {{ com task [[ic1]] reduces to [[ic2]] }} by

  tconf s e --> tconf s' e'
  --------------------------- :: ReduceTarget
  conf l s e ~~> conf l s' e'

  --------------------------------------------------------------- :: Label
  conf l s E TI label l' (IT v) ~~> conf l s E TI Labeled l' (IT v)

  conf l s E TI unlabel Labeled l' (IT v) ~~> conf l s E v
